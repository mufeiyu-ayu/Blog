import{_ as s,o as n,c as a,a4 as p}from"./chunks/framework.c4ff8a6b.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Page/NestJs/TypeOrm.md","filePath":"Page/NestJs/TypeOrm.md","lastUpdated":1696097498000}'),l={name:"Page/NestJs/TypeOrm.md"},o=p(`<h2 id="typeorm" tabindex="-1">TypeOrm <a class="header-anchor" href="#typeorm" aria-label="Permalink to &quot;TypeOrm&quot;">​</a></h2><p>Nest 与数据库无关，允许您轻松地与任何 SQL 或 NoSQL 数据库集成。根据您的喜好，您有许多选项可供您使用。在最一般的层面上，将 Nest 连接到数据库只是为数据库加载适当的 Node.js 驱动程序，就像使用 Express 或 Fastify 一样。在此我们使用 TypeORM。以下是关于 TypeORM 的一些基本信息：</p><ul><li>TypeORM 是一个 ORM 框架，它可以运行在 NodeJS、浏览器、Cordova、PhoneGap、Ionic、React Native、Expo 和 Electron 平台上，可以与 TypeScript 和 JavaScript (ES5, ES6, ES7, ES8) 一起使用。</li></ul><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-npm vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">npm</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npm install --save @nestjs/typeorm typeorm mysql</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npm install --save @nestjs/typeorm typeorm mysql</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装完成后在 app.module.ts 中引入</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Module } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/common&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { AppController } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./app.controller&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { AppService } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./app.service&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { TypeOrmModule } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/typeorm&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  imports: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    PersonModule,</span></span>
<span class="line"><span style="color:#E1E4E8;">    UserModule,</span></span>
<span class="line"><span style="color:#E1E4E8;">    TypeOrmModule.</span><span style="color:#B392F0;">forRoot</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 配置信息</span></span>
<span class="line"><span style="color:#E1E4E8;">      type: </span><span style="color:#9ECBFF;">&#39;mysql&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//数据库类型</span></span>
<span class="line"><span style="color:#E1E4E8;">      username: </span><span style="color:#9ECBFF;">&#39;root&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//账号</span></span>
<span class="line"><span style="color:#E1E4E8;">      password: </span><span style="color:#9ECBFF;">&#39;xiangjiayi53822&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//密码</span></span>
<span class="line"><span style="color:#E1E4E8;">      host: </span><span style="color:#9ECBFF;">&#39;localhost&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//host</span></span>
<span class="line"><span style="color:#E1E4E8;">      port: </span><span style="color:#79B8FF;">3306</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">      database: </span><span style="color:#9ECBFF;">&#39;db&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//库名</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// entities: [__dirname + &#39;/**/*.entity{.ts,.js}&#39;], //实体文件</span></span>
<span class="line"><span style="color:#E1E4E8;">      synchronize: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//synchronize字段代表是否自动将实体类同步到数据库 生产环境不建议使用</span></span>
<span class="line"><span style="color:#E1E4E8;">      retryDelay: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//重试连接数据库间隔</span></span>
<span class="line"><span style="color:#E1E4E8;">      retryAttempts: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//重试连接数据库的次数</span></span>
<span class="line"><span style="color:#E1E4E8;">      autoLoadEntities: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//如果为true,将自动加载实体 forFeature()方法注册的每个实体都将自动添加到配置对象的实体数组中</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  controllers: [AppController],</span></span>
<span class="line"><span style="color:#E1E4E8;">  providers: [AppService],</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AppModule</span><span style="color:#E1E4E8;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Module } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/common&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { AppController } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./app.controller&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { AppService } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./app.service&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { TypeOrmModule } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/typeorm&#39;</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">Module</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  imports: [</span></span>
<span class="line"><span style="color:#24292E;">    PersonModule,</span></span>
<span class="line"><span style="color:#24292E;">    UserModule,</span></span>
<span class="line"><span style="color:#24292E;">    TypeOrmModule.</span><span style="color:#6F42C1;">forRoot</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 配置信息</span></span>
<span class="line"><span style="color:#24292E;">      type: </span><span style="color:#032F62;">&#39;mysql&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//数据库类型</span></span>
<span class="line"><span style="color:#24292E;">      username: </span><span style="color:#032F62;">&#39;root&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//账号</span></span>
<span class="line"><span style="color:#24292E;">      password: </span><span style="color:#032F62;">&#39;xiangjiayi53822&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//密码</span></span>
<span class="line"><span style="color:#24292E;">      host: </span><span style="color:#032F62;">&#39;localhost&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//host</span></span>
<span class="line"><span style="color:#24292E;">      port: </span><span style="color:#005CC5;">3306</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">      database: </span><span style="color:#032F62;">&#39;db&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//库名</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// entities: [__dirname + &#39;/**/*.entity{.ts,.js}&#39;], //实体文件</span></span>
<span class="line"><span style="color:#24292E;">      synchronize: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//synchronize字段代表是否自动将实体类同步到数据库 生产环境不建议使用</span></span>
<span class="line"><span style="color:#24292E;">      retryDelay: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//重试连接数据库间隔</span></span>
<span class="line"><span style="color:#24292E;">      retryAttempts: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//重试连接数据库的次数</span></span>
<span class="line"><span style="color:#24292E;">      autoLoadEntities: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//如果为true,将自动加载实体 forFeature()方法注册的每个实体都将自动添加到配置对象的实体数组中</span></span>
<span class="line"><span style="color:#24292E;">    }),</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  controllers: [AppController],</span></span>
<span class="line"><span style="color:#24292E;">  providers: [AppService],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AppModule</span><span style="color:#24292E;"> {}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="存储库" tabindex="-1">存储库 <a class="header-anchor" href="#存储库" aria-label="Permalink to &quot;存储库&quot;">​</a></h3><p>TypeORM 支持存储库设计模式，因此每个实体都有自己的存储库。可以从数据库数据源获取这些存储库。</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// user.entity.ts</span></span>
<span class="line"><span style="color:#6A737D;">// 创建一个实体，并且将其映射到数据库表</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Entity, Column, PrimaryGeneratedColumn } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;typeorm&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">Entity</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">User</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">PrimaryGeneratedColumn</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">id</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">Column</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">firstName</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">Column</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">lastName</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">Column</span><span style="color:#E1E4E8;">({ default: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">isActive</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// user.entity.ts</span></span>
<span class="line"><span style="color:#6A737D;">// 创建一个实体，并且将其映射到数据库表</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Entity, Column, PrimaryGeneratedColumn } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;typeorm&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">Entity</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">User</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">PrimaryGeneratedColumn</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">Column</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">firstName</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">Column</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">lastName</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">Column</span><span style="color:#24292E;">({ default: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">isActive</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>使用实体</strong></p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Module } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/common&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { TestService } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./test.service&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { TestController } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./test.controller&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { TypeOrmModule } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/typeorm&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Test } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./entities/test.entity&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  imports: [TypeOrmModule.</span><span style="color:#B392F0;">forFeature</span><span style="color:#E1E4E8;">([Test])],</span></span>
<span class="line"><span style="color:#E1E4E8;">  controllers: [TestController],</span></span>
<span class="line"><span style="color:#E1E4E8;">  providers: [TestService],</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestModule</span><span style="color:#E1E4E8;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Module } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/common&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { TestService } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./test.service&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { TestController } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./test.controller&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { TypeOrmModule } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/typeorm&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Test } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./entities/test.entity&#39;</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">Module</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  imports: [TypeOrmModule.</span><span style="color:#6F42C1;">forFeature</span><span style="color:#24292E;">([Test])],</span></span>
<span class="line"><span style="color:#24292E;">  controllers: [TestController],</span></span>
<span class="line"><span style="color:#24292E;">  providers: [TestService],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestModule</span><span style="color:#24292E;"> {}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>此模块使用 forFeature() 该方法定义在当前范围内注册的存储库。有了这个，我们可以将它 TestRepository 注入到使用装饰器中 TestService @InjectRepository()</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Injectable } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/common&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { CreateTestDto } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./dto/create-test.dto&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { UpdateTestDto } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./dto/update-test.dto&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Test } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./entities/test.entity&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { InjectRepository } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@nestjs/typeorm&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Repository } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;typeorm&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">Injectable</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">InjectRepository</span><span style="color:#E1E4E8;">(Test) </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">usersRepository</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Repository</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Test</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">createTestDto</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTestDto</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Test</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    test.firstName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> createTestDto.firstName</span></span>
<span class="line"><span style="color:#E1E4E8;">    test.lastName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> createTestDto.lastName</span></span>
<span class="line"><span style="color:#E1E4E8;">    test.isActive </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> createTestDto.isActive</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usersRepository.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(test) </span><span style="color:#6A737D;">// 添加数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">findAll</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Test</span><span style="color:#E1E4E8;">[]&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usersRepository.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">findOne</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">firstName</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Test</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usersRepository.</span><span style="color:#B392F0;">findOneBy</span><span style="color:#E1E4E8;">({ firstName })</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">id</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">updateTestDto</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UpdateTestDto</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`This action updates a #\${</span><span style="color:#E1E4E8;">id</span><span style="color:#9ECBFF;">} test\`</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">id</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// await this.usersRepository.delete(id);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usersRepository</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">createQueryBuilder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Test&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;id = :id&#39;</span><span style="color:#E1E4E8;">, { id })</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">execute</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Injectable } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/common&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { CreateTestDto } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./dto/create-test.dto&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { UpdateTestDto } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./dto/update-test.dto&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Test } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./entities/test.entity&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { InjectRepository } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@nestjs/typeorm&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Repository } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;typeorm&#39;</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">Injectable</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">InjectRepository</span><span style="color:#24292E;">(Test) </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#E36209;">usersRepository</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Repository</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#E36209;">createTestDto</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTestDto</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">test</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    test.firstName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> createTestDto.firstName</span></span>
<span class="line"><span style="color:#24292E;">    test.lastName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> createTestDto.lastName</span></span>
<span class="line"><span style="color:#24292E;">    test.isActive </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> createTestDto.isActive</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.usersRepository.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(test) </span><span style="color:#6A737D;">// 添加数据</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">findAll</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;">[]&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.usersRepository.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">findOne</span><span style="color:#24292E;">(</span><span style="color:#E36209;">firstName</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Test</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.usersRepository.</span><span style="color:#6F42C1;">findOneBy</span><span style="color:#24292E;">({ firstName })</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(</span><span style="color:#E36209;">id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">, </span><span style="color:#E36209;">updateTestDto</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UpdateTestDto</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`This action updates a #\${</span><span style="color:#24292E;">id</span><span style="color:#032F62;">} test\`</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#E36209;">id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">void</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// await this.usersRepository.delete(id);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.usersRepository</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">createQueryBuilder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Test&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">delete</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;id = :id&#39;</span><span style="color:#24292E;">, { id })</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">execute</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h3 id="repository" tabindex="-1">Repository <a class="header-anchor" href="#repository" aria-label="Permalink to &quot;Repository&quot;">​</a></h3><p>使用 EntityManager 您可以管理（插入、更新、删除、加载等）任何实体。实体管理器就像一个地方所有实体存储库的集合,但是我们大部分都是在使用存储库 Repository 去操作对应的实体，</p><p>在 typeorm 中存在很多操作实体来操作数据库的方法，这些方法都是通过 Repository 来实现的，而内部很多查找方法都依据 findOptions 来实现的，所以我们可以通过 findOptions 来实现更多的操作。</p><p>所有存储库和管理器 .find* 方法都接受特殊选项，可用于查询所需的数据</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">userRepository.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(findoptions: FindManyOptions</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Test</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">): </span><span style="color:#79B8FF;">Promise</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Test[]</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// 在此列出常用findoptions的查找选项</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">select</span><span style="color:#E1E4E8;">:[</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;firstName&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// SELECT &quot;firstName&quot;, &quot;lastName&quot; FROM &quot;user</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">relations</span><span style="color:#E1E4E8;">:[</span><span style="color:#9ECBFF;">&#39;test&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// LEFT JOIN &quot;test&quot; &quot;test&quot; ON &quot;test&quot;.&quot;id&quot;=&quot;user&quot;.&quot;testId&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">where</span><span style="color:#E1E4E8;">:{</span><span style="color:#B392F0;">firstName</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&#39;xiang&#39;</span><span style="color:#E1E4E8;">,}, </span><span style="color:#6A737D;">// {expression} | [{expression}]</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// WHERE &quot;user&quot;.&quot;firstName&quot; = &#39;xiang&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;"> where: [</span></span>
<span class="line"><span style="color:#6A737D;">        { firstName: &quot;Timber&quot;, lastName: &quot;Saw&quot; },</span></span>
<span class="line"><span style="color:#6A737D;">        { firstName: &quot;Stan&quot;, lastName: &quot;Lee&quot; },</span></span>
<span class="line"><span style="color:#6A737D;">    ],</span></span>
<span class="line"><span style="color:#6A737D;">  SELECT * FROM &quot;user&quot; WHERE (&quot;firstName&quot; = &#39;Timber&#39; AND &quot;lastName&quot; = &#39;Saw&#39;) OR (&quot;firstName&quot; = &#39;Stan&#39; AND &quot;lastName&quot; = &#39;Lee&#39;)</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">order</span><span style="color:#E1E4E8;">:{</span><span style="color:#B392F0;">firstName</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&#39;ASC&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#B392F0;">lastName</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&#39;DESC&#39;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// SELECT * FROM &quot;user&quot;ORDER BY &quot;name&quot; ASC, &quot;id&quot; DESC</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 类似于limit</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">skip</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 跳过前5条数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">take</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 取10条数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//  skip 并 take 应一起使用</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">cache</span><span style="color:#E1E4E8;"> :</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//  启用或禁用查询结果缓存。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 运算符</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">title</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">Not</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;About #1&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// SELECT * FROM &quot;post&quot; WHERE &quot;title&quot; != &#39;About #1&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">likes</span><span style="color:#E1E4E8;">: </span><span style="color:#B392F0;">LessThan</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// SELECT * FROM &quot;post&quot; WHERE &quot;likes&quot; &lt; 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">userRepository.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(findoptions: FindManyOptions</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Test</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">): </span><span style="color:#005CC5;">Promise</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Test[]</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// 在此列出常用findoptions的查找选项</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">:[</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;firstName&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">// SELECT &quot;firstName&quot;, &quot;lastName&quot; FROM &quot;user</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">relations</span><span style="color:#24292E;">:[</span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">// LEFT JOIN &quot;test&quot; &quot;test&quot; ON &quot;test&quot;.&quot;id&quot;=&quot;user&quot;.&quot;testId&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">where</span><span style="color:#24292E;">:{</span><span style="color:#6F42C1;">firstName</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;xiang&#39;</span><span style="color:#24292E;">,}, </span><span style="color:#6A737D;">// {expression} | [{expression}]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// WHERE &quot;user&quot;.&quot;firstName&quot; = &#39;xiang&#39;</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;"> where: [</span></span>
<span class="line"><span style="color:#6A737D;">        { firstName: &quot;Timber&quot;, lastName: &quot;Saw&quot; },</span></span>
<span class="line"><span style="color:#6A737D;">        { firstName: &quot;Stan&quot;, lastName: &quot;Lee&quot; },</span></span>
<span class="line"><span style="color:#6A737D;">    ],</span></span>
<span class="line"><span style="color:#6A737D;">  SELECT * FROM &quot;user&quot; WHERE (&quot;firstName&quot; = &#39;Timber&#39; AND &quot;lastName&quot; = &#39;Saw&#39;) OR (&quot;firstName&quot; = &#39;Stan&#39; AND &quot;lastName&quot; = &#39;Lee&#39;)</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">order</span><span style="color:#24292E;">:{</span><span style="color:#6F42C1;">firstName</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;ASC&#39;</span><span style="color:#24292E;">,</span><span style="color:#6F42C1;">lastName</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;DESC&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// SELECT * FROM &quot;user&quot;ORDER BY &quot;name&quot; ASC, &quot;id&quot; DESC</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 类似于limit</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">skip</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 跳过前5条数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">take</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 取10条数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//  skip 并 take 应一起使用</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">cache</span><span style="color:#24292E;"> :</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">//  启用或禁用查询结果缓存。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 运算符</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">title</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">Not</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;About #1&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// SELECT * FROM &quot;post&quot; WHERE &quot;title&quot; != &#39;About #1&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">likes</span><span style="color:#24292E;">: </span><span style="color:#6F42C1;">LessThan</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// SELECT * FROM &quot;post&quot; WHERE &quot;likes&quot; &lt; 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>更多请访问<a href="https://typeorm.io/find-options" target="_blank" rel="noreferrer">https://typeorm.io/find-options</a></p><h2 id="repository-api" tabindex="-1">Repository API <a class="header-anchor" href="#repository-api" aria-label="Permalink to &quot;Repository API&quot;">​</a></h2><p>使用 Repository 可以实现对数据库的增删改查，里面有很多方法 我观察发现带有 by 的方法是没有 by 的简写，不带 by 的需要加入 where 条件，而带 by 的不需要加入 where 条件</p><p>具体访问 <a href="https://typeorm.io/repository-api" target="_blank" rel="noreferrer">https://typeorm.io/repository-api</a></p>`,23),e=[o];function t(r,c,y,E,i,u){return n(),a("div",null,e)}const b=s(l,[["render",t]]);export{F as __pageData,b as default};
